#!/bin/sh
export POSIXLY_CORRECT=yes

# function for opening desired editor
edit_file(){
  if [ -z $EDITOR ]; then
    if [ -z $VISUAL ]; then
      vi $1
    else
      $VISUAL $1
    fi
  else
    $EDITOR $1
  fi
}

# prints out all files in a given directory before or after a certain date
show_before() {
  directory=$2  # value of directory is set and checked
  if [ -z $directory ]; then
    tmp=$PWD
    dir_path=`realpath -q "$tmp"`
  elif [ -d $directory ]; then
    dir_path=`realpath -q "$directory"`
  else
    "Entered directory doesn't exist" >&2
    exit 1
  fi

  selected_date=$1
  selected_date=$( echo "$selected_date" | tr -d "-")

  tmp_date=$(grep "$dir_path/.*" $WEDI_RC | grep -v "$dir_path/.*/" | awk '{print $1}' )
  full_result=$(grep "$dir_path/.*" $WEDI_RC | grep -v "$dir_path/.*/" )

  ## iterate and check whether the date is higher than the entered one
  for i in $tmp_date
  do
    tmp_date="${i%%\_[0-9]*}"
    tocomp=$(echo "$tmp_date" | tr -d "-")
    if [ $tocomp -ge $selected_date ]; then
      full_result=$( echo "$full_result" | grep -v "$tmp_date.*")
    fi
  done

  full_result=$( echo "$full_result" | awk '{print $2}' | sort | uniq )

  ## prints out the result
  for i in $full_result
  do
    echo "${i##*/}"
  done
}

show_after() {
  directory=$2  # value of directory is set and checked
  if [ -z $directory ]; then
    tmp=$PWD
    dir_path=`realpath -q "$tmp"`
  elif [ -d $directory ]; then
    dir_path=`realpath -q "$directory"`
  else
    "Entered directory doesn't exist" >&2
    exit 1
  fi

  # prepare all arguments
  selected_date=$1
  selected_date=$( echo "$selected_date" | tr -d "-")

  tmp_date=$(grep "$dir_path/.*" $WEDI_RC | grep -v "$dir_path/.*/" | awk '{print $1}' )
  full_result=$(grep "$dir_path/.*" $WEDI_RC | grep -v "$dir_path/.*/" )

  ## compare whether the date is lower than the selected_date
  for i in $tmp_date
  do
    tmp_date="${i%%\_[0-9]*}"
    tocomp=$(echo "$tmp_date" | tr -d "-")
    if [ $tocomp -lt $selected_date ]; then
      full_result=$( echo "$full_result" | grep -v "$tmp_date.*")
    fi
  done

  full_result=$( echo "$full_result" | awk '{print $2}' | sort | uniq )

  ## prints out the result
  for i in $full_result
  do
    echo "${i##*/}"
  done
}

# searches the most often edited file in a given directory
most_often_edited(){
  directory=$1  # value of directory is set and checked
  if [ -z $directory ]; then
    tmp=$PWD
    dir_path=`realpath -q "$tmp"`
  elif [ -d $directory ]; then
    dir_path=`realpath -q "$directory"`
  else
    "Entered directory doesn't exist" >&2
    exit 1
  fi

  ### it does wonders
  result=$(grep "$dir_path/.*" $WEDI_RC | grep -v "$dir_path/.*/" | awk '{print $2}' | sort | uniq -c | sort -nr | head -n 1 | awk '{print $2}' )

  ### check if result exists or not
  if [ -z $result ]; then
    return
  else
    real_path=`realpath -q "$result"`
    echo "$(date "+%Y-%m-%d_%H:%M:%S") $real_path" >> $WEDI_RC
    edit_file $real_path
  fi
}

# checks whether time was entered and if yes, checks whether it's in a correct format
check_time() {
  date=$1
  if [ -z $date ]; then
    echo "No argument for date entered"
    exit 1
  elif echo "$date" | grep -q -E '^[0-9]{4}-[0-9]{2}-[0-9]{2}$'; then
    return
  else
    echo "Invalid format for date. Accepted format is YYYY-MM-DD" >&2
    exit 1
  fi
}

# find the most recently edited file and opens it
most_recently_edited(){
  dir_path=$1
  result_search=$(grep "$dir_path/.*" $WEDI_RC | grep -v "$dir_path/.*/" | sort -nr | head -n 1 | awk '{print $2}' )

  if [ -z $result_search ]; then
    return
  else
    real_path=`realpath -q "$result_search"`
    echo "$(date "+%Y-%m-%d_%H:%M:%S") $real_path" >> $WEDI_RC
    edit_file $real_path
  fi
}

# prints out names of all files
directory_print(){
  directory=$1  # value of directory is set and checked
  if [ -z $directory ]; then
    tmp=$PWD
    dir_path=`realpath -q "$tmp"`
  elif [ -d $directory ]; then
    dir_path=`realpath -q "$directory"`
  else
    "Entered directory doesn't exist" >&2
    exit 1
  fi

  result=$(grep " $dir_path/.*" $WEDI_RC | grep -v " $dir_path/.*/" | awk '{print $2}' | sort | uniq)
  ### this grep takes everything with the appropriate path and then removes everything
  ### unnecessary at the end

  # prints it one by one
  for i in $result
  do
    echo "${i##*/}"
  done
}

### checks whether all files that were created still exists
check_WEDI(){

  ### prepare the variables
  result=$( cat $WEDI_RC | awk '{print $2}' )
  full=$( cat $WEDI_RC )

  for i in $result
  do
    ## check if they doesn't exist and filter out the non-existent
    if [ ! -e $i ]; then
      full=$( echo "$full" | grep -v "$i" )
    fi
  done

  ## load it into WEDI_RC
  echo "$full" > $WEDI_RC

}

#### MAIN ####

# check if WEDI_RC is exported
if [ -f "$WEDI_RC" ]; then
# pass
  :
elif [ -z "$WEDI_RC" ]; then
# no file has been exported - script stop right here
  echo "No WEDI_RC exported" >&2
  exit 1
else
# wedi_rc has been exported
  filename="${WEDI_RC##*/}"
  dir=${WEDI_RC%%/$filename}
  # check if path exists, if yes, create the file
  if [ -e $dir ]; then
    `touch $WEDI_RC`
  # if the path doesn't exist, create the path and also the file
  else
    `mkdir -p $dir` && `touch $WEDI_RC`
  fi
fi

# check whether all records in wedi are still existing
check_WEDI

### checks for the existence of realpath utility
if ! type "realpath" > /dev/null; then
  echo "Utility realpath doesn't exist" >&2
  exit 1
fi

### load arguments
tmp=$PWD
directory=`realpath -q "$tmp"`
first_arg=$1

### cases for the first argument entered
case $first_arg in
  ### print case
  "-l") directory=$2
        directory_print $directory
        exit 0;;
  ### most often edited case
  "-m") directory=$2
        most_often_edited $directory
        exit 0;;
  ### before the date case
  "-a") date=$2
        check_time $date
        directory=$3
        show_after "$date" "$directory"
        exit 0;;
  ### after the date case
  "-b") date=$2
        check_time $date
        directory=$3
        show_before "$date" "$directory"
        exit 0;;
  *) :;;
esac

# if first argument is blank, it searches the current directory
if [ -z $first_arg ]; then
  most_recently_edited $directory
  exit 0

# first argument exists and it is a directory
elif [ -d $first_arg ]; then
  real_path=`realpath -q "$first_arg"`
  most_recently_edited $real_path
  exit 0

# checks whether it's a file, if yes, edit it
elif [ -f $first_arg ]; then
  real_path=`realpath -q "$first_arg"`
  # try to find the real_path in WEDI_RC
  if grep -R -q ".*$real_path.*" $WEDI_RC; then
    echo "$(date "+%Y-%m-%d_%H:%M:%S") $real_path" >> $WEDI_RC
    edit_file $real_path
  else
  # file has not been found in WEDI_RC
    echo "$(date "+%Y-%m-%d_%H:%M:%S") $real_path" >> $WEDI_RC
    edit_file $real_path
  fi

# arguments are invalid
else
  echo "Entered arguments are invalid or the file doesn't exist" >&2
  exit 1
fi
